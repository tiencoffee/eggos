for i in range(1, 10)
	define('gray' + i, lighten(#5c7080, (7 - i) / 7 * 120% - 10%))
	define('blue' + i, lighten(#137cbd, (7 - i) / 7 * 100%))
	define('red' + i, lighten(#db3737, (7 - i) / 7 * 100%))

line-clamp()
	-webkit-line-clamp arguments
	line-clamp arguments
box-orient()
	-webkit-box-orient arguments
	box-orient arguments
text-security()
	-webkit-text-security arguments
	text-security arguments
user-drag()
	-webkit-user-drag arguments
	user-drag arguments
text-truncate(line)
	if line < 2
		text-overflow ellipsis
		white-space nowrap
		overflow hidden
	else
		display -webkit-box
		line-clamp line
		box-orient vertical
		overflow hidden

@import '//cdn.jsdelivr.net/gh/tiencoffee/fonts/Calibri/Calibri.css'
body
	margin 0
	font 12pt 'Calibri',sans-serif
	word-break break-word
	overflow hidden
	user-select none
	cursor default
*, *:before, *:after
	box-sizing border-box
	vertical-align middle
:focus
	outline 0
::selection
	background blue7
	color #fff
h1, h2, h3, h4, h5, h6, p
	margin 8px 0
img, a
	user-drag none
a, abbr, acronym, b, bdo, big, br, cite, code, dfn, em, i,
kbd, map, q, samp, small, span, strong, sub, sup, time, tt, var
	vertical-align baseline

#appEl
	position absolute
	inset 0
	&:empty
		display none
.Icon-fa
	display inline-flex
.Icon-img
	width 18px
	height 18px
	object-fit cover

.Button
	height 26px
	padding 0 4px
	border solid 1px #0006
	border-radius 0
	display inline-flex
	justify-content center
	align-items center
	font inherit
	white-space nowrap
	background gray1
	&:hover
		background gray2
	&:active
		background gray3
.Button-blue
	background blue7
	color #fff
	&:hover
		background blue8
	&:active
		background blue9
	&.Button-minimal
		color blue8
		&:hover
			background blue2
		&:active
			background blue3
.Button-red
	background red7
	color #fff
	&:hover
		background red8
	&:active
		background red9
	&.Button-minimal
		color red8
		&:hover
			background red2
		&:active
			background red3
.Button-minimal
	border 0
	background #0000
.Button_text
	margin 0 4px
.Button_icon
	margin 0 4px

.TextInput
	position relative
	height 26px
	border solid 1px #0006
	display inline-flex
	justify-content center
	align-items center
	background #fff
	&:focus-within
		border-color blue7
		box-shadow 0 0 0 1px blue7
		z-index 1
	> .Button
		height 26px
		border 0
.TextInput_leftIcon
	padding-left 8px
.TextInput_rightIcon
	padding-right 8px
.TextInput_input
	width 100%
	height 100%
	padding 0 8px
	border 0
	border-radius 0
	font inherit

.PasswordInput-hidePassword
	> .TextInput_input
		text-security square

.Radio
.Checkbox
	height 26px
	display inline-flex
	align-items center
.Radio_input
.Checkbox_input
	position relative
	width 20px
	height 20px
	margin 0
	border solid 1px #0006
	background gray1
	appearance none
.Radio_input
	border-radius 50%
	&:checked
		background blue7
		&:after
			position absolute
			inset 4px
			border-radius 50%
			background #fff
			content ''
.Checkbox_input
	border-radius 0
	&:checked
		background blue7
		&:after
			position absolute
			inset 0
			display flex
			justify-content center
			align-items center
			font-family 'Font Awesome 5 Pro'
			font-weight 900
			color #fff
			content '\f00c'
.Radio_label
.Checkbox_label
	margin-left 8px

.Select
	position relative
	height 26px
	padding 0 8px
	border solid 1px #0006
	display inline-flex
	align-items center
	background gray1
.Select_text
	margin-right 8px
	flex-grow 1
	text-truncate 1
.Select_list
	border solid 1px #0006
	background #fff
	overflow-x hidden
	overflow-y auto
	&:empty
		display none
.Select_item
	min-height 26px
	padding 2px 8px
	display flex
	align-items center
.Select_item-hover
	background gray2
.Select_divider
	margin 4px 0
	border-bottom solid 1px #0006

.ControlGroup
	display inline-flex
	justify-content center
	align-items center
	> :not(:first-child)
		margin-left -1px

.Table
	display block
	overflow auto
	tr
		height 26px
	td, th
		padding 0 8px
.Table-hasHeader
	tr:first-child
		text-align left
		th
			position sticky
			top 0
			background #fff
			box-shadow 0 1px #0006
.Table-bordered
	td, th
		&:not(:last-child)
			border-right solid 1px #0006
	tr
		&:not(:last-child)
			border-bottom solid 1px #0006
.Table-striped
	tr
		&:nth-child(even)
			background gray1
.Table-interactive
	&.Table-hasHeader tr:not(:first-child)
	&:not(.Table-hasHeader) tr
		&:hover
			background gray2
		&:active
			background gray3
.Table-content
	width 100%
	border-collapse collapse

.Dialog
	position absolute
	animation-duration .25s
	animation-timing-function ease
	animation-fill-mode forwards
.Dialog-maximize
	animation-name Dialog-maximize
@keyframes Dialog-maximize
	to
		width 100%
		height 100%
		transform translate(0,0)
.Dialog-unmaximize
	animation-name Dialog-unmaximize
@keyframes Dialog-unmaximize
	from
		width 100%
		height 100%
		transform translate(0,0)
.Dialog_content
	height 100%
	border solid 1px #0006
	display flex
	flex-direction column
	background gray1
	box-shadow 0 2px 8px #0006
.Dialog_header
	padding 4px
	display flex
	align-items center
	> .Button
		height 24px
.Dialog_title
	height 100%
	padding 0 8px
	display flex
	flex-grow 1
	align-items center
	justify-content center
	overflow hidden
.Dialog_body
	margin 0 4px 4px
	border 0
	flex-grow 1
	background #fff

((styl))

.row
	display flex
	flex-direction row
.column
	display flex
	flex-direction column
.col
	flex-grow 1
.col-0
	flex-shrink 0
for i in range(1, 12)
	val = floor(i / 12 * 100%, 2)
	.row > .col-{i}
		width val
	.column > .col-{i}
		height val
	.row-{i}
		display grid
		grid-template-columns repeat(i, 1fr)
		> .col-{i}
			grid-column span (i)
	.offset-{i}
		margin-right val
.full
	position absolute
	inset 0
.wrap
	flex-wrap wrap
.nowrap
	flex-wrap nowrap
for dir in Row Column
	.{dir}
		prop = dir is Row ? 'justify-content' : 'align-items'
		&.start
			{prop} flex-start
		&.center
			{prop} center
		&.end
			{prop} flex-end
		prop = dir is Row ? 'align-items' : 'justify-content'
		&.top
			{prop} flex-start
		&.middle
			{prop} center
		&.bottom
			{prop} flex-end
.between
	justify-content space-between
.around
	justify-content space-around
.evenly
	justify-content space-evenly
.stretch
	align-items stretch
props = {p: padding, m: margin}
sides = {t: top, r: right, b: bottom, l: left}
sizes = 32px 16px 8px 4px 2px 0
for p, prop in props
	for size, i in sizes
		i = 5 - i
		negate = p is 'm' and i
		.{p}-{i}
			{prop} size
		if negate
			.-{p}-{i}
				{prop} -(size)
		.{p}x-{i}
			{prop}-left size
			{prop}-right size
		.{p}y-{i}
			{prop}-top size
			{prop}-bottom size
		if negate
			.-{p}x-{i}
				{prop}-left -(size)
				{prop}-right -(size)
			.-{p}y-{i}
				{prop}-top -(size)
				{prop}-bottom -(size)
		for s, side in sides
			.{p}{s}-{i}
				{prop}-{side} size
			if negate
				.-{p}{s}-{i}
					{prop}-{side} -(size)
for size, i in sizes
	i = 5 - i
	.gap-{i}
		gap size
	.gap-x-{i}
		column-gap size
	.gap-y-{i}
		row-gap size
for pos in absolute relative fixed
	.{pos}
		position pos
for size in 100% 75% 50% 25% 0
	.w-{size}
		width size
	.h-{size}
		height size
props = {w: width, h: height}
for p, prop in props
	for type in fit min max
		.{p}-{type}
			{prop} (type)-content
for i in 0..5
	.z-{i}
		z-index i
	if i
		.-z-{i}
			z-index -(i)
for dsp in block inline-block inline flex inline-flex
	.{dsp}
		display dsp
.hidden, [hidden]
	display none
for align in left center right
	.text-{align}
		text-align align
.text-baseline
	vertical-align baseline
.text-bold
	font-weight bold
.text-italic
	font-style italic
.text-nowrap
	white-space nowrap
	word-break break-word
.text-pre
	white-space pre
.text-pre-wrap
	white-space pre-wrap
	word-break break-word
.text-truncate
	text-truncate 1
.text-truncate-2
	text-truncate 2
.text-truncate-3
	text-truncate 3
.text-select
	user-select auto
.text-noselect
	user-select none
.text-select-all
	user-select all
.text-security
	text-security square
.text-small, small
	font-size 9pt
.scroll
	overflow auto
.scroll-y
	overflow-x hidden
	overflow-y auto
.noscroll
	overflow hidden
.event
	pointer-events auto
.noevent
	pointer-events none
.event-childs
	pointer-events none
	> *
		pointer-events auto
for ratio in (1 1) (4 3) (3 2) (5 3) (16 9)
	w = ratio[0]
	h = ratio[1]
	.ratio-{w}x{h}
		aspect-ratio w\/h
for fit in cover contain scale-down fill none
	.img-{fit}
		object-fit fit
.img-contrast
	image-rendering -webkit-optimize-contrast
props = {bg: background, text: color}
for p, prop in props
	for color in 'gray' 'blue' 'red'
		for i in range(1, 10)
			val = lookup(color + i)
			.{p}-{color}-{i}
			.hover-{p}-{color}-{i}
			.active-{p}-{color}-{i}
				{prop} val
